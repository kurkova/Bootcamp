Index: kodilla-hibernate/src/test/java/com/kodilla/hibernate/manytomany/facade/ManyToManyFacadeTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- kodilla-hibernate/src/test/java/com/kodilla/hibernate/manytomany/facade/ManyToManyFacadeTest.java	(revision f3aa3f24431de4db6b033f1b7443d9e117964d50)
+++ kodilla-hibernate/src/test/java/com/kodilla/hibernate/manytomany/facade/ManyToManyFacadeTest.java	(date 1553791764930)
@@ -17,14 +17,11 @@
 
 @RunWith(SpringRunner.class)
 @SpringBootTest
-@Transactional
 public class ManyToManyFacadeTest {
     @Autowired
     private ManyToManyFacade manyToManyFacade;
     @Autowired
     private CompanyDao companyDao;
-    @Autowired
-    private EmployeeDao employeeDao;
 
     @Test
     public void findEmployeeNameLikeTest() {
Index: kodilla-hibernate/src/test/java/com/kodilla/hibernate/task/dao/TaskDaoTestSuite.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- kodilla-hibernate/src/test/java/com/kodilla/hibernate/task/dao/TaskDaoTestSuite.java	(revision f3aa3f24431de4db6b033f1b7443d9e117964d50)
+++ kodilla-hibernate/src/test/java/com/kodilla/hibernate/task/dao/TaskDaoTestSuite.java	(date 1553783119473)
@@ -1,72 +1,72 @@
-package com.kodilla.hibernate.task.dao;
-
-import com.kodilla.hibernate.task.Task;
-import com.kodilla.hibernate.task.TaskFinancialDetails;
-import org.junit.Assert;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.test.context.junit4.SpringRunner;
-
-import java.math.BigDecimal;
-import java.util.List;
-
-@RunWith(SpringRunner.class)
-@SpringBootTest
-public class TaskDaoTestSuite {
-    @Autowired
-    private TaskDao taskDao;
-    private static final String DESCRIPTION = "Test: Learn Hibernate";
-
-    @Test
-    public void testTaskDaoSave() {
-        //Given
-        Task task = new Task(DESCRIPTION, 7);
-
-        //When
-        taskDao.save(task);
-
-        //Then
-        int id = task.getId();
-        Task readTask = taskDao.findOne(id);
-        Assert.assertEquals(id, readTask.getId());
-
-        //CleanUp
-        taskDao.delete(id);
-    }
-    @Test
-    public void testTaskDaoFindByDuration() {
-        //Given
-        Task task = new Task(DESCRIPTION, 7);
-        taskDao.save(task);
-        int duration = task.getDuration();
-
-        //When
-        List<Task> readTasks = taskDao.findByDuration(duration);
-
-        //Then
-        Assert.assertEquals(1, readTasks.size());
-
-        //CleanUp
-        int id = readTasks.get(0).getId();
-        taskDao.delete(id);
-    }
-
-    @Test
-    public void testTaskDaoSaveWithFinancialDetails() {
-        //Given
-        Task task = new Task(DESCRIPTION, 30);
-        task.setTaskFinancialDetails(new TaskFinancialDetails(new BigDecimal(120), false));
-
-        //When
-        taskDao.save(task);
-        int id = task.getId();
-
-        //Then
-        Assert.assertNotEquals(0, id);
-
-        //CleanUp
-        taskDao.delete(id);
-    }
-}
+//package com.kodilla.hibernate.task.dao;
+//
+//import com.kodilla.hibernate.task.Task;
+//import com.kodilla.hibernate.task.TaskFinancialDetails;
+//import org.junit.Assert;
+//import org.junit.Test;
+//import org.junit.runner.RunWith;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.test.context.junit4.SpringRunner;
+//
+//import java.math.BigDecimal;
+//import java.util.List;
+//
+//@RunWith(SpringRunner.class)
+//@SpringBootTest
+//public class TaskDaoTestSuite {
+//    @Autowired
+//    private TaskDao taskDao;
+//    private static final String DESCRIPTION = "Test: Learn Hibernate";
+//
+//    @Test
+//    public void testTaskDaoSave() {
+//        //Given
+//        Task task = new Task(DESCRIPTION, 7);
+//
+//        //When
+//        taskDao.save(task);
+//
+//        //Then
+//        int id = task.getId();
+//        Task readTask = taskDao.findOne(id);
+//        Assert.assertEquals(id, readTask.getId());
+//
+//        //CleanUp
+//        taskDao.delete(id);
+//    }
+//    @Test
+//    public void testTaskDaoFindByDuration() {
+//        //Given
+//        Task task = new Task(DESCRIPTION, 7);
+//        taskDao.save(task);
+//        int duration = task.getDuration();
+//
+//        //When
+//        List<Task> readTasks = taskDao.findByDuration(duration);
+//
+//        //Then
+//        Assert.assertEquals(1, readTasks.size());
+//
+//        //CleanUp
+//        int id = readTasks.get(0).getId();
+//        taskDao.delete(id);
+//    }
+//
+//    @Test
+//    public void testTaskDaoSaveWithFinancialDetails() {
+//        //Given
+//        Task task = new Task(DESCRIPTION, 30);
+//        task.setTaskFinancialDetails(new TaskFinancialDetails(new BigDecimal(120), false));
+//
+//        //When
+//        taskDao.save(task);
+//        int id = task.getId();
+//
+//        //Then
+//        Assert.assertNotEquals(0, id);
+//
+//        //CleanUp
+//        taskDao.delete(id);
+//    }
+//}
Index: kodilla-hibernate/src/test/java/com/kodilla/hibernate/manytomany/dao/CompanyDaoTestSuite.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- kodilla-hibernate/src/test/java/com/kodilla/hibernate/manytomany/dao/CompanyDaoTestSuite.java	(revision f3aa3f24431de4db6b033f1b7443d9e117964d50)
+++ kodilla-hibernate/src/test/java/com/kodilla/hibernate/manytomany/dao/CompanyDaoTestSuite.java	(date 1553783119453)
@@ -1,115 +1,115 @@
-package com.kodilla.hibernate.manytomany.dao;
-
-import com.kodilla.hibernate.manytomany.Company;
-import com.kodilla.hibernate.manytomany.Employee;
-import org.junit.Assert;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.test.context.junit4.SpringRunner;
-
-import java.util.List;
-
-@RunWith(SpringRunner.class)
-@SpringBootTest
-public class CompanyDaoTestSuite {
-    @Autowired
-    private CompanyDao companyDao;
-    @Autowired
-    private EmployeeDao employeeDao;
-
-    @Test
-    public void testSaveManyToMany() {
-        //Given
-        Employee johnSmith = new Employee("John", "Smith");
-        Employee stephanieClarckson = new Employee("Stephanie", "Clarckson");
-        Employee lindaKovalsky = new Employee("Linda", "Kovalsky");
-
-        Company softwareMachine = new Company("Software Machine");
-        Company dataMaesters = new Company("Data Maesters");
-        Company greyMatter = new Company("Grey Matter");
-
-        softwareMachine.getEmployees().add(johnSmith);
-        dataMaesters.getEmployees().add(stephanieClarckson);
-        dataMaesters.getEmployees().add(lindaKovalsky);
-        greyMatter.getEmployees().add(johnSmith);
-        greyMatter.getEmployees().add(lindaKovalsky);
-
-        johnSmith.getCompanies().add(softwareMachine);
-        johnSmith.getCompanies().add(greyMatter);
-        stephanieClarckson.getCompanies().add(dataMaesters);
-        lindaKovalsky.getCompanies().add(dataMaesters);
-        lindaKovalsky.getCompanies().add(greyMatter);
-
-        //When
-        companyDao.save(softwareMachine);
-        int softwareMachineId = softwareMachine.getId();
-        companyDao.save(dataMaesters);
-        int dataMaestersId = dataMaesters.getId();
-        companyDao.save(greyMatter);
-        int greyMatterId = greyMatter.getId();
-
-        Company readIdSoftwareMachineId = companyDao.findById(softwareMachineId);
-        Company readIdDataMaestersId = companyDao.findById(dataMaestersId);
-        Company readIdGreyMatterId = companyDao.findById(greyMatterId);
-        //Then
-        Assert.assertEquals(softwareMachineId, readIdSoftwareMachineId.getId());
-        Assert.assertEquals(dataMaestersId, readIdDataMaestersId.getId());
-        Assert.assertEquals(greyMatterId, readIdGreyMatterId.getId());
-
-        //CleanUp
-        try {
-            companyDao.delete(softwareMachineId);
-            companyDao.delete(dataMaestersId);
-            companyDao.delete(greyMatterId);
-        } catch (Exception e) {
-            //do nothing
-        }
-    }
-
-    @Test
-    public void testNamedQueries() {
-        //Given
-        Employee paulaWalk = new Employee("Paul", "Walk");
-        Employee johnStaff = new Employee("John", "Staff");
-        Employee donaldBret = new Employee("Donald", "Bret");
-
-        Company softwareApp = new Company("Software App");
-        Company softwareLen = new Company("Software len");
-        Company appleSoft = new Company("Apple Soft");
-
-        softwareApp.getEmployees().add(paulaWalk);
-        softwareLen.getEmployees().add(johnStaff);
-        softwareLen.getEmployees().add(donaldBret);
-        appleSoft.getEmployees().add(paulaWalk);
-        appleSoft.getEmployees().add(donaldBret);
-
-        paulaWalk.getCompanies().add(softwareApp);
-        paulaWalk.getCompanies().add(appleSoft);
-        johnStaff.getCompanies().add(softwareLen);
-        donaldBret.getCompanies().add(appleSoft);
-        donaldBret.getCompanies().add(softwareLen);
-
-        companyDao.save(softwareApp);
-        companyDao.save(softwareLen);
-        companyDao.save(appleSoft);
-
-        //When
-        List<Employee> lastName = employeeDao.findEmployeeNameLike("Walk");
-        List<Company> nameStartWith = companyDao.findCompanyNameLike("Sof");
-
-        //Then
-        Assert.assertEquals(1, lastName.size());
-        Assert.assertEquals(2, nameStartWith.size());
-
-        //CleanUp
-        try {
-            companyDao.delete(softwareApp);
-            companyDao.delete(softwareLen);
-            companyDao.delete(appleSoft);
-        } catch (Exception e) {
-            //do nothing
-        }
-    }
-}
+//package com.kodilla.hibernate.manytomany.dao;
+//
+//import com.kodilla.hibernate.manytomany.Company;
+//import com.kodilla.hibernate.manytomany.Employee;
+//import org.junit.Assert;
+//import org.junit.Test;
+//import org.junit.runner.RunWith;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.test.context.junit4.SpringRunner;
+//
+//import java.util.List;
+//
+//@RunWith(SpringRunner.class)
+//@SpringBootTest
+//public class CompanyDaoTestSuite {
+//    @Autowired
+//    private CompanyDao companyDao;
+//    @Autowired
+//    private EmployeeDao employeeDao;
+//
+//    @Test
+//    public void testSaveManyToMany() {
+//        //Given
+//        Employee johnSmith = new Employee("John", "Smith");
+//        Employee stephanieClarckson = new Employee("Stephanie", "Clarckson");
+//        Employee lindaKovalsky = new Employee("Linda", "Kovalsky");
+//
+//        Company softwareMachine = new Company("Software Machine");
+//        Company dataMaesters = new Company("Data Maesters");
+//        Company greyMatter = new Company("Grey Matter");
+//
+//        softwareMachine.getEmployees().add(johnSmith);
+//        dataMaesters.getEmployees().add(stephanieClarckson);
+//        dataMaesters.getEmployees().add(lindaKovalsky);
+//        greyMatter.getEmployees().add(johnSmith);
+//        greyMatter.getEmployees().add(lindaKovalsky);
+//
+//        johnSmith.getCompanies().add(softwareMachine);
+//        johnSmith.getCompanies().add(greyMatter);
+//        stephanieClarckson.getCompanies().add(dataMaesters);
+//        lindaKovalsky.getCompanies().add(dataMaesters);
+//        lindaKovalsky.getCompanies().add(greyMatter);
+//
+//        //When
+//        companyDao.save(softwareMachine);
+//        int softwareMachineId = softwareMachine.getId();
+//        companyDao.save(dataMaesters);
+//        int dataMaestersId = dataMaesters.getId();
+//        companyDao.save(greyMatter);
+//        int greyMatterId = greyMatter.getId();
+//
+//        Company readIdSoftwareMachineId = companyDao.findById(softwareMachineId);
+//        Company readIdDataMaestersId = companyDao.findById(dataMaestersId);
+//        Company readIdGreyMatterId = companyDao.findById(greyMatterId);
+//        //Then
+//        Assert.assertEquals(softwareMachineId, readIdSoftwareMachineId.getId());
+//        Assert.assertEquals(dataMaestersId, readIdDataMaestersId.getId());
+//        Assert.assertEquals(greyMatterId, readIdGreyMatterId.getId());
+//
+//        //CleanUp
+//        try {
+//            companyDao.delete(softwareMachineId);
+//            companyDao.delete(dataMaestersId);
+//            companyDao.delete(greyMatterId);
+//        } catch (Exception e) {
+//            //do nothing
+//        }
+//    }
+//
+//    @Test
+//    public void testNamedQueries() {
+//        //Given
+//        Employee paulaWalk = new Employee("Paul", "Walk");
+//        Employee johnStaff = new Employee("John", "Staff");
+//        Employee donaldBret = new Employee("Donald", "Bret");
+//
+//        Company softwareApp = new Company("Software App");
+//        Company softwareLen = new Company("Software len");
+//        Company appleSoft = new Company("Apple Soft");
+//
+//        softwareApp.getEmployees().add(paulaWalk);
+//        softwareLen.getEmployees().add(johnStaff);
+//        softwareLen.getEmployees().add(donaldBret);
+//        appleSoft.getEmployees().add(paulaWalk);
+//        appleSoft.getEmployees().add(donaldBret);
+//
+//        paulaWalk.getCompanies().add(softwareApp);
+//        paulaWalk.getCompanies().add(appleSoft);
+//        johnStaff.getCompanies().add(softwareLen);
+//        donaldBret.getCompanies().add(appleSoft);
+//        donaldBret.getCompanies().add(softwareLen);
+//
+//        companyDao.save(softwareApp);
+//        companyDao.save(softwareLen);
+//        companyDao.save(appleSoft);
+//
+//        //When
+//        List<Employee> lastName = employeeDao.findEmployeeNameLike("Walk");
+//        List<Company> nameStartWith = companyDao.findCompanyNameLike("Sof");
+//
+//        //Then
+//        Assert.assertEquals(1, lastName.size());
+//        Assert.assertEquals(2, nameStartWith.size());
+//
+//        //CleanUp
+//        try {
+//            companyDao.delete(softwareApp);
+//            companyDao.delete(softwareLen);
+//            companyDao.delete(appleSoft);
+//        } catch (Exception e) {
+//            //do nothing
+//        }
+//    }
+//}
Index: kodilla-hibernate/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- kodilla-hibernate/src/main/resources/application.properties	(revision f3aa3f24431de4db6b033f1b7443d9e117964d50)
+++ kodilla-hibernate/src/main/resources/application.properties	(date 1553784606450)
@@ -2,8 +2,9 @@
 spring.datasource.username=kodilla_user
 spring.datasource.password=kodilla_password
 
+
 spring.jpa.database=mysql
 spring.jpa.show-sql=true
 spring.jpa.hibernate.ddl-auto=update
 spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy
-spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
\ No newline at end of file
+spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
Index: kodilla-hibernate/src/main/java/com/kodilla/hibernate/KodillaHibernateApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- kodilla-hibernate/src/main/java/com/kodilla/hibernate/KodillaHibernateApplication.java	(revision f3aa3f24431de4db6b033f1b7443d9e117964d50)
+++ kodilla-hibernate/src/main/java/com/kodilla/hibernate/KodillaHibernateApplication.java	(date 1553791764916)
@@ -3,9 +3,10 @@
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 
+
+
 @SpringBootApplication
 public class KodillaHibernateApplication {
-
     public static void main(String[] args) {
         SpringApplication.run(KodillaHibernateApplication.class, args);
     }
Index: kodilla-hibernate/src/test/java/com/kodilla/hibernate/task/dao/TaskFinancialDetailsDaotestSuite.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- kodilla-hibernate/src/test/java/com/kodilla/hibernate/task/dao/TaskFinancialDetailsDaotestSuite.java	(revision f3aa3f24431de4db6b033f1b7443d9e117964d50)
+++ kodilla-hibernate/src/test/java/com/kodilla/hibernate/task/dao/TaskFinancialDetailsDaotestSuite.java	(date 1553783119468)
@@ -1,39 +1,39 @@
-package com.kodilla.hibernate.task.dao;
-
-import com.kodilla.hibernate.task.Task;
-import com.kodilla.hibernate.task.TaskFinancialDetails;
-import org.junit.Assert;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.test.context.junit4.SpringRunner;
-
-import java.math.BigDecimal;
-import java.util.List;
-
-@RunWith(SpringRunner.class)
-@SpringBootTest
-public class TaskFinancialDetailsDaotestSuite {
-    @Autowired
-    TaskFinancialDetailsDao taskFinancialDetailsDao;
-
-    @Test
-    public void testFindByPaid() {
-        //Given
-        TaskFinancialDetails taskFinancialDetails =
-                new TaskFinancialDetails(new BigDecimal(115), false);
-        taskFinancialDetailsDao.save(taskFinancialDetails);
-        int id = taskFinancialDetails.getId();
-
-        //When
-        List<TaskFinancialDetails> resultList = taskFinancialDetailsDao.findByPaid(false);
-
-        //Then
-        Assert.assertEquals(1, resultList.size());
-
-        //CleanUp
-        taskFinancialDetailsDao.delete(id);
-    }
-
-}
+//package com.kodilla.hibernate.task.dao;
+//
+//import com.kodilla.hibernate.task.Task;
+//import com.kodilla.hibernate.task.TaskFinancialDetails;
+//import org.junit.Assert;
+//import org.junit.Test;
+//import org.junit.runner.RunWith;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.test.context.junit4.SpringRunner;
+//
+//import java.math.BigDecimal;
+//import java.util.List;
+//
+//@RunWith(SpringRunner.class)
+//@SpringBootTest
+//public class TaskFinancialDetailsDaotestSuite {
+//    @Autowired
+//    TaskFinancialDetailsDao taskFinancialDetailsDao;
+//
+//    @Test
+//    public void testFindByPaid() {
+//        //Given
+//        TaskFinancialDetails taskFinancialDetails =
+//                new TaskFinancialDetails(new BigDecimal(115), false);
+//        taskFinancialDetailsDao.save(taskFinancialDetails);
+//        int id = taskFinancialDetails.getId();
+//
+//        //When
+//        List<TaskFinancialDetails> resultList = taskFinancialDetailsDao.findByPaid(false);
+//
+//        //Then
+//        Assert.assertEquals(1, resultList.size());
+//
+//        //CleanUp
+//        taskFinancialDetailsDao.delete(id);
+//    }
+//
+//}
Index: kodilla-hibernate/src/test/java/com/kodilla/hibernate/KodillaHibernateApplicationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- kodilla-hibernate/src/test/java/com/kodilla/hibernate/KodillaHibernateApplicationTests.java	(revision f3aa3f24431de4db6b033f1b7443d9e117964d50)
+++ kodilla-hibernate/src/test/java/com/kodilla/hibernate/KodillaHibernateApplicationTests.java	(date 1553783119481)
@@ -1,16 +1,16 @@
-package com.kodilla.hibernate;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.test.context.junit4.SpringRunner;
-
-@RunWith(SpringRunner.class)
-@SpringBootTest
-public class KodillaHibernateApplicationTests {
-
-    @Test
-    public void contextLoads() {
-    }
-}
-
+//package com.kodilla.hibernate;
+//
+//import org.junit.Test;
+//import org.junit.runner.RunWith;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.test.context.junit4.SpringRunner;
+//
+//@RunWith(SpringRunner.class)
+//@SpringBootTest
+//public class KodillaHibernateApplicationTests {
+//
+//    @Test
+//    public void contextLoads() {
+//    }
+//}
+//
